#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), "..", "lib")

require 'gosen'

session = Gosen::Session.new('https://localhost:3443', :timeout => 10)
grid = Gosen::Grid.new

# Example: list all clusters in the grid
grid.sites.each do |site|
  puts "#{site.name}: #{site.clusters.map{|c| c.uid}.join(', ')}"
end

# Example: select specific resources with the Reference API
rennes = grid.sites.detect{ |s| s.name == "Rennes" }
puts rennes.name
paradent = rennes.clusters.detect{ |c| c.uid == "paradent" }
puts paradent.uid
paradent_13 = paradent.nodes.detect{ |n| n.uid == "paradent-13" }
puts paradent_13.uid

# Example: select specific resources with the Monitoring API
puts grid.sites.detect { |s| s.status.system.free >= 100 }.name

idle_cluster = grid.sites.detect { |s| s.name == "Rennes" }.clusters.detect { |c| c.status.system.busy == 0 }
puts idle_cluster.uid if idle_cluster

puts paradent_13.status.hardware
puts paradent_13.status.system

# Example: using the jobset API
me = Gosen::User.new('priteau')
# List all my jobsets
puts me.jobsets.map{ |js| js.name }.join(', ')
# List the job IDs of my first jobset
jobs = me.jobsets.detect{ |js| js.name == "My First Jobset" }.jobs
puts jobs.map{ |j| j.uid }.join(', ') unless jobs.empty?
# Create a new jobset
puts me.create_jobset(:name => "My Second Jobset", :project => "Something cool").uid

# TODO: submitting to the jobset API should be supported, so that you can submit a 1-hour deploy job with 2 nodes on each cluster like this:
# grid.sites.each do |site|
#   site.clusters.each do |cluster|
#     Gosen::Job.new(:cluster => cluster, nodes => 2, walltime => 3600, :type => :deploy)
#   end
# end
